name: Docker Build and Push

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Custom tag for Docker image'
        required: false
        default: 'latest'

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.DOCKER_USERNAME }}/messaging-app
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=${{ github.event.inputs.tag }},enable=${{ github.event_name == 'workflow_dispatch' }}
  
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
      with:
        context: ./messaging_app
        file: ./messaging_app/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          BUILD_DATE=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
          VCS_REF=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}

    - name: Image digest
      run: echo "Docker image digest - ${{ steps.build-and-push.outputs.digest }}"

    - name: Create deployment summary
      run: |
        echo "## Docker Image Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "| Property | Value |" >> $GITHUB_STEP_SUMMARY
        echo "|----------|-------|" >> $GITHUB_STEP_SUMMARY
        echo "| Repository | ${{ secrets.DOCKER_USERNAME }}/messaging-app |" >> $GITHUB_STEP_SUMMARY
        echo "| Tags | ${{ steps.meta.outputs.tags }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Digest | ${{ steps.build-and-push.outputs.digest }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Build Date | $(date -u) |" >> $GITHUB_STEP_SUMMARY
        echo "| Commit SHA | ${{ github.sha }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Branch | ${{ github.ref_name }} |" >> $GITHUB_STEP_SUMMARY

  security-scan:
    name: Security Scan
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '${{ secrets.DOCKER_USERNAME }}/messaging-app:latest'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH,MEDIUM'

    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  notify:
    name: Deployment Notification
    needs: [build-and-push, security-scan]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Deployment Success Notification
      if: needs.build-and-push.result == 'success'
      run: |
        echo "‚úÖ Docker image successfully built and pushed!"
        echo "üê≥ Image: ${{ secrets.DOCKER_USERNAME }}/messaging-app:latest"
        echo "üìÖ Build Date: $(date -u)"
        echo "üîó Docker Hub: https://hub.docker.com/r/${{ secrets.DOCKER_USERNAME }}/messaging-app"

    - name: Deployment Failure Notification
      if: needs.build-and-push.result == 'failure'
      run: |
        echo "‚ùå Docker image build failed!"
        echo "Please check the logs above for details."
        exit 1
